input float2 inUV;
input float4 inColor;

Texture0 texDiffuse
{
    filter = nearest;
    repeat = clamp;
}

Texture1 texNormal
{
    filter = nearest;
    repeatY = clamp;
}

Texture2 texDepth
{
    filter = nearest;
    repeatY = clamp;
}

extern float3 lPos;
extern float3 lColor;
extern float lRadius;

float3 LightPass(float3 pos, float3 normal, float3 lpos, float lradius, float3 lcolor)
{
    float3 dir = lpos - pos;
    float dis = length(dir);
    float disSqr = dis * dis;
    disSqr /= lradius * lradius;
    float dotNormal = dot(normal, dir) / dis;
    dotNormal = 1 - (1 - dotNormal) * (1 - dotNormal);
    float intensity = clamp(1 - disSqr, 0, 1);
    dotNormal = clamp(dotNormal, 0, 1);
    intensity *= dotNormal;
    return lcolor * intensity;
}

void main()
{
    float4 tdiffuse = texDiffuse(inUV);
    float4 tnormal = texNormal(inUV);
    float4 tdepth = texDepth(inUV);

    oColor = tdiffuse;

    oColor.rgb *= LightPass(tdepth.xyz * 20.0, tnormal.xyz * 2.0 - 1.0, lPos, lRadius, lColor);
}
